heat_template_version: 2015-04-30

parameters:

  server_map:
    type: json
    description: Map of servers to be used with OS::Heat::SoftwareDeploymentGroup

  http_proxy:
    type: string
    description: "HTTP proxy URL"
    default: ''

  https_proxy:
    type: string
    description: "HTTPS proxy URL"
    default: ''

  no_proxy:
    type: string
    description: "Exceptions to proxy configuration"
    default: ''

  elasticsearch_addresses:
    type: comma_delimited_list

  elasticsearch_port:
    type: number
    constraints:
      - range: { min: 1 }

  filepaths:
    type: comma_delimited_list
    description: List of absolute paths to log files filebeat should ship to elasticsearch

resources:

  # SOFTWARE CONFIGS

  install:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: { get_file: scripts/filebeat/ubuntu/1_install.sh }
      inputs:
        - name: VERSION

  configure:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: { get_file: scripts/filebeat/ubuntu/2_configure.sh }
      inputs:
        - name: ELASTICSEARCH_ADDRESSES
          type: CommaDelimitedList
        - name: LOGFILE_PATHS
          type: CommaDelimitedList

  # SOFTWARE DEPLOYMENTS

  deploy_install:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      config: { get_resource: install }
      servers: { get_param: server_map }
      signal_transport: HEAT_SIGNAL
      input_values:
        http_proxy: { get_param: http_proxy }
        https_proxy: { get_param: https_proxy }
        no_proxy: { get_param: no_proxy }
        VERSION: 5.4.0

  deploy_configure:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      config: { get_resource: configure }
      servers: { get_param: server_map }
      signal_transport: HEAT_SIGNAL
      input_values:
        http_proxy: { get_param: http_proxy }
        https_proxy: { get_param: https_proxy }
        no_proxy: { get_param: no_proxy }
        ELASTICSEARCH_ADDRESSES:
          repeat:
            for_each:
              <%server%>: { get_param: elasticsearch_addresses }
            template:
              str_replace:
                template: <%server%>:port
                params:
                   port: { get_param: elasticsearch_port }
        LOGFILE_PATHS: { get_param: filepaths }
    depends_on:
      - deploy_install

outputs:
